stages:
  - build
  - test
  - release
  - deploy

variables:
  APPLICATION_NAME: meyasubako
  CONTAINER_TAG: ${CI_COMMIT_SHORT_SHA}
  CONTAINER_IMAGE: ${AWS_ECR_PUBLIC_URL}/${APPLICATION_NAME}
  CONTAINER_IMAGE_TEST: ${CONTAINER_IMAGE}:test
  CONTAINER_IMAGE_LATEST: ${CONTAINER_IMAGE}:latest
  CONTAINER_IMAGE_TAGGED: ${CONTAINER_IMAGE}:${CONTAINER_TAG}

  TEST_NETWORK: tdd
  TEST_DB: tdd-db
  TEST_DB_USERNAME: postgres
  TEST_DB_PASSWORD: keyboardcat

  K8S_NODEPORT: 31050

image: moreillon/ci-dind:4bca50d7
services:
  - name: docker:24.0.7-dind

build:
  stage: build
  tags:
    - dind
  only:
    - master
  before_script:
    # Registry login
    - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ECR_PUBLIC_URL}
    # Create repository in ECR if it does not exist yet
    - >
      aws ecr-public create-repository --region us-east-1 --repository-name ${APPLICATION_NAME}
      || echo "Repository might have already existed"

  script:
    - docker build -t ${CONTAINER_IMAGE_TEST} .
    - docker push ${CONTAINER_IMAGE_TEST}

test:
  stage: test
  only:
    - master
  tags:
    - dind
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  before_script:
    - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ECR_PUBLIC_URL}
    # Creating network for TDD
    - docker network create ${TEST_NETWORK}
    # Creating DB container in network
    - >
      docker run
      -d
      --rm
      --name ${TEST_DB}
      --network ${TEST_NETWORK}
      --hostname ${TEST_DB}
      --env POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      --env POSTGRES_DB=${TEST_DB}
      postgres:15
    - sleep 30 # Wait for DB to become available
  script:
    # Run tests
    - >
      docker run
      --rm
      --name tdd-app
      --network ${TEST_NETWORK}
      -e DATABASE_URL=postgresql://postgres:${TEST_DB_PASSWORD}@${TEST_DB}:5432/${TEST_DB}?schema=public
      ${CONTAINER_IMAGE_TEST} 
      bun run ci-test

## Release
container:
  stage: release
  only:
    - master
  tags:
    - dind
  before_script:
    - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ECR_PUBLIC_URL}
  script:
    - docker pull ${CONTAINER_IMAGE_TEST}
    - docker tag ${CONTAINER_IMAGE_TEST} ${CONTAINER_IMAGE_TAGGED}
    - docker tag ${CONTAINER_IMAGE_TEST} ${CONTAINER_IMAGE_LATEST}
    - docker push ${CONTAINER_IMAGE_LATEST}
    - docker push ${CONTAINER_IMAGE_TAGGED}

deploy:
  stage: deploy
  tags:
    - dind
  only:
    - master
  script:
    - envsubst < kubernetes_manifest.yml | kubectl apply -f -
  environment:
    name: production
    kubernetes:
      namespace: ${KUBERNETES_NAMESPACE} # Obtained from GitLab

